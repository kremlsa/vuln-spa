stages:
  - prepare
  - review

variables:
  MCP_PATH: "$CI_PROJECT_DIR/mcp/mcp.json"
  OPENAI_MODEL: "gpt-5"
  OPENAI_API_BASE_URL: "https://api.openai.com/v1"
  OPENAI_SYSTEM_ROLE: "Ты помощник по code review. Проанализируй изменения дай ответ на русском языке."

prepare_mcp:
  stage: prepare
  image: alpine:latest
  script:
    - apk add --no-cache git tree
    - mkdir -p mcp
    - git fetch origin "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - git diff origin/"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"...HEAD > mcp/diff.patch
    - tree -nfi -I ".git" > mcp/tree.txt || find . > mcp/tree.txt
    - cp Dockerfile mcp/Dockerfile || true
    - cp README.md mcp/README.md || true
    - echo "Проанализируй код на наличие уязвимостей и ошибок." > mcp/prompt.txt
    - echo "ok test" > mcp/test_report.txt
    - |
      cat > mcp/mcp.json <<EOF
      {
        "prompt": "prompt.txt",
        "diff": "diff.patch",
        "tree": "tree.txt",
        "Dockerfile": "Dockerfile",
        "readme": "README.md",
        "tests": "test_report.txt"
      }
      EOF
  artifacts:
    paths:
      - mcp/
    expire_in: 1 hour
  only:
    - merge_requests



ai_review:
  stage: review
  image: docker.io/kremlsa/review-bot:latest
  script:
    - echo "🤖 Запуск анализа AI"
    - /app/ai_review_bot --base-dir mcp
  dependencies:
    - prepare_mcp
  artifacts:
    paths:
      - mcp/ai_reply.md
    when: always
  only:
    - merge_requests


